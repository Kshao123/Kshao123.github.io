<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue-vue3</title>
      <link href="/2020/03/27/vue-vue3/"/>
      <url>/2020/03/27/vue-vue3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js-复制，document.execCommand 的一些小坑</title>
      <link href="/2020/03/27/js-copy/"/>
      <url>/2020/03/27/js-copy/</url>
      
        <content type="html"><![CDATA[<p>对于 execCommand 来复制的使用应该不会很陌生，这几天使用的碰上了一个新问题，此方法在请求的时候是无法使用的，往下看👇</p><h1 id="默认使用复制"><a href="#默认使用复制" class="headerlink" title="默认使用复制"></a>默认使用复制</h1><pre class="line-numbers language-JavaScript"><code class="language-JavaScript">const copy = value => {    let inp = document.createElement('input');    inp.setAttribute('value', value)    document.body.appendChild(inp);    inp.select();    document.execCommand('copy')    document.body.removeChild(inp)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在正常情况下-document-execCommand-39-copy-39-是返回-true-的，但是在有异步请求的情况下会返回-false；"><a href="#在正常情况下-document-execCommand-39-copy-39-是返回-true-的，但是在有异步请求的情况下会返回-false；" class="headerlink" title="在正常情况下 document.execCommand(&#39;copy&#39;) 是返回 true 的，但是在有异步请求的情况下会返回 false；"></a>在正常情况下 <code>document.execCommand(&#39;copy&#39;)</code> 是返回 true 的，但是在有异步请求的情况下会返回 false；</h3><pre class="line-numbers language-diff"><code class="language-diff">const copy = value => {    let inp = document.createElement('input');    inp.setAttribute('value', value)    document.body.appendChild(inp);    inp.select();<span class="token inserted">+   if (document.execCommand('copy')) {</span>         document.execCommand('copy')<span class="token inserted">+   }</span>    document.body.removeChild(inp)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bilibili-哔哩哔哩bv转av，附官方API</title>
      <link href="/2020/03/27/wl-bilibili-bvToAv/"/>
      <url>/2020/03/27/wl-bilibili-bvToAv/</url>
      
        <content type="html"><![CDATA[<p>最近小破站的出的 BV 号怪恶心的，下面来一个bv转av demo，输入完整链接或bv号即可。</p><style>.bili-wrap {  margin: 100px auto;  width: max-content;}.bili-wrap .loadText {  display: none;}.bili-wrap .load {  display: block;}.bili-wrap .av-wrap {  margin-top: 20px;}.bili-wrap .text {  padding-left: 10px;  padding-right: 10px;}.bili-wrap .av-url {  margin-top: 10px;}.bili-wrap #bv-btn {  display: flex;  justify-content: center;}.bili-wrap .av-svg {  margin-left: 10px;  margin-top: 1px;  animation: loading 3s infinite linear;}.bili-wrap .av-svg > circle {  fill: transparent;  stroke: #00adb5;  stroke-width: 3px;  stroke-dasharray: 60;  stroke-dashoffset: 0;  stroke-miterlimit: 10;  animation: loading-circle linear 1.8s infinite;}@keyframes loading {  0% {    transform: rotate(0);  }  100% {    transform: rotate(360deg);  }}@keyframes loading-circle {  0% {    stroke-dashoffset: 0;  }  100% {    stroke-dashoffset: -240;  }}/*# sourceMappingURL=bilibili.css.map */</style><section class="bili-wrap">  <p>提取 bv</p>  <div style="display: flex">    <input style="width: 320px" id="av-inp" placeholder="输入完整链接或BV号" type="text">    <button id="bv-btn">      提取 bv 号      <svg width="15" height="15" viewbox="0 0 30 30" class="av-svg loadText">        <circle r="12" cx="15" cy="15" stroke-linecap="round" stroke-opacity="0.7">        </circle>      </svg>    </button>  </div>  <div class="av-wrap">    <span>av: </span>    <span id="av-text" class="text"></span>    <button id="cp-btn">copy</button>  </div>  <div class="av-url">    url:    <a target="_blank" id="url-text" class="text"></a>  </div></section><script>  const avInp = document.getElementById('av-inp'),        bvBtn = document.getElementById('bv-btn'),        cpBtn = document.getElementById('cp-btn'),        cpUrlBtn = document.getElementById('cp-url-btn'),        loadSpan = document.querySelector('.loadText'),        avText = document.getElementById('av-text'),        bvUrl = 'https://www.bilibili.com/video/BV1gs411B7y4/',        api = 'https://danmu.u2sb.top/api/other/bilibili/queryaid?bvid=';  const setAttr = (dom, attr, value) => {    dom[attr] = value;  }  const copyText = value => {    let inp = document.createElement('input');    inp.setAttribute('value', value)    document.body.appendChild(inp)    inp.select();    inp.setSelectionRange(0, 9999)    if (document.execCommand('copy')) {      document.execCommand('copy')    }    document.body.removeChild(inp)  }  setAttr(avInp, 'value', bvUrl);  bvBtn.addEventListener('click',async function (e) {    const reg = /BV\w+/g    const val = avInp.value;    const bvId = val.match(reg);    if (!bvId || !bvId.length) return alert('请输入链接或 BV 号');    try {      loadSpan.classList.add('load')      const res = await fetch(`${api}${bvId?.[0]}`);      const { code, data: { aid } } = await res.json();      if (code === 0) {        setAttr(document.getElementById('av-text'), 'innerHTML', `av${aid}`)        setAttr(document.getElementById('url-text'), 'innerHTML', `https://www.bilibili.com/video/av${aid}`)        setAttr(document.getElementById('url-text'), 'href', `https://www.bilibili.com/video/av${aid}`)        loadSpan.classList.remove('load')      }    } catch {      alert('获取失败，请稍后再试')    }  });  cpBtn.addEventListener('click', function (e) {    copyText(avText.innerText)  })</script>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一个 Git 项目配置多个仓库</title>
      <link href="/2020/03/26/git-Repository/"/>
      <url>/2020/03/26/git-Repository/</url>
      
        <content type="html"><![CDATA[<p>废话不多直接x</p><h1 id="普通添加仓库"><a href="#普通添加仓库" class="headerlink" title="普通添加仓库"></a>普通添加仓库</h1><pre class="line-numbers language-shell"><code class="language-shell">git remote add origin <git@git.com><span aria-hidden="true" class="line-numbers-rows"><span></span></span></git@git.com></code></pre><h1 id="添加多个仓库"><a href="#添加多个仓库" class="headerlink" title="添加多个仓库"></a>添加多个仓库</h1><pre class="line-numbers language-shell"><code class="language-shell">git remote add <仓库名称> <git@git.com># 例子git remote add newRepository https://github.com/xxx/xxx# 查询git remote -v# newRepository   https://github.com/xxx/newRepository.git (fetch)# newRepository   https://github.com/xxx/newRepository.git (push)# origin  http://github.com/xxx/xxx (fetch)# origin  http://github.com/xxx/xxx (push)# pushgit push -u newRepository master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></git@git.com></仓库名称></code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git ssh key 设置，多邮箱配置</title>
      <link href="/2020/03/26/wl-ssh-git/"/>
      <url>/2020/03/26/wl-ssh-git/</url>
      
        <content type="html"><![CDATA[<p>单邮箱的小伙伴可能没这样的烦恼，但是邮箱多的又需要使用 ssh 的连接就需要此教程啦。</p><h1 id="先最基本的配置-ssh-吧"><a href="#先最基本的配置-ssh-吧" class="headerlink" title="先最基本的配置 ssh 吧"></a>先最基本的配置 ssh 吧</h1><pre class="line-numbers language-shell"><code class="language-shell">ssh-keygen -t rsa -C "你的邮箱” -f ~/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一直按确定将会在 ~/.ssh，你设置的路径里找到对应公钥私钥</p><h1 id="多邮箱配置"><a href="#多邮箱配置" class="headerlink" title="多邮箱配置"></a>多邮箱配置</h1><pre class="line-numbers language-shell"><code class="language-shell">ssh-keygen -t rsa -C "你的另一个邮箱” -f ~/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成之后在当前文件夹创建 config 文件 无后缀。</p><pre class="line-numbers language-shell"><code class="language-shell">touch config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>config</code> 文件</p><pre class="line-numbers language-shell"><code class="language-shell"># gitee.comHost gitee.comPort 22HostName gitee.comPreferredAuthentications publickeyIdentityFile /Users/a666/.ssh/id_rsa_jykUser jyk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h4><pre class="line-numbers language-shell"><code class="language-shell"># 配置文件参数# Host : Host可以看作是一个你要识别的模式，对识别的模式，进行配置对应的的主机名和ssh文件（可以直接填写ip地址）# HostName : 要登录主机的主机名（建议与Host一致）# User : 登录名（如github的username）# IdentityFile : 指明上面User对应的identityFile路径# Port: 端口号（如果不是默认22号端口则需要指定）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>es2020 实用的几个新方法</title>
      <link href="/2020/03/26/js-es-2020-1/"/>
      <url>/2020/03/26/js-es-2020-1/</url>
      
        <content type="html"><![CDATA[<h4 id="最近-JavaScript-从-es6-就提高了更新频率，2019还没有结束-2020的规范就已经开始出草案了😵。"><a href="#最近-JavaScript-从-es6-就提高了更新频率，2019还没有结束-2020的规范就已经开始出草案了😵。" class="headerlink" title="最近 JavaScript 从 es6 就提高了更新频率，2019还没有结束 2020的规范就已经开始出草案了😵。"></a>最近 JavaScript 从 es6 就提高了更新频率，2019还没有结束 2020的规范就已经开始出草案了😵。</h4><p>话不多说</p><h1 id="可选链运算符"><a href="#可选链运算符" class="headerlink" title="可选链运算符 ??"></a>可选链运算符 <code>??</code></h1><h4 id="场景：访问嵌套对象时如果当前为-undefined-或者为-null这时再做其他操作将会报错，可选链运算符可完美解决。"><a href="#场景：访问嵌套对象时如果当前为-undefined-或者为-null这时再做其他操作将会报错，可选链运算符可完美解决。" class="headerlink" title="场景：访问嵌套对象时如果当前为 undefined 或者为 null这时再做其他操作将会报错，可选链运算符可完美解决。"></a>场景：访问嵌套对象时如果当前为 undefined 或者为 null这时再做其他操作将会报错，<code>可选链运算符</code>可完美解决。</h4><pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>    a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    b<span class="token punctuation">:</span> <span class="token string">''</span> <span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// undefined</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Uncaught TypeError: Cannot read property 'c' of undefined</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token operator">?</span><span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 使用可选链运算符 ?. 来访问嵌套对象，如果碰到的是 undefined 或 null 属性，只会返回 undefined</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>b<span class="token operator">?</span><span class="token punctuation">.</span>substring<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ƒ substring() { [native code] }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用可选链运算符 ?. 来访问嵌套对象，如果碰到的是 undefined 或 null 属性，只会返回 undefined</p></blockquote><h1 id="空值合并运算符"><a href="#空值合并运算符" class="headerlink" title="空值合并运算符"></a>空值合并运算符</h1><h4 id="场景：当给变量值为-undefined-或者-null-设置默认值时会遇到变量为-空字符串或为0的尴尬情况"><a href="#场景：当给变量值为-undefined-或者-null-设置默认值时会遇到变量为-空字符串或为0的尴尬情况" class="headerlink" title="场景：当给变量值为 undefined 或者 null 设置默认值时会遇到变量为 空字符串或为0的尴尬情况"></a>场景：当给变量值为 undefined 或者 null 设置默认值时会遇到变量为 空字符串或为0的尴尬情况</h4><pre class="line-numbers language-javascript"><code class="language-javascript">  <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">||</span> <span class="token string">'false'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> z <span class="token operator">=</span> x <span class="token operator">?</span><span class="token operator">?</span> <span class="token string">'false'</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 'false'</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ECMA 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一个破防盗链方法，亲测。。。（Referrer-Policy）</title>
      <link href="/2020/03/20/wl-fdl/"/>
      <url>/2020/03/20/wl-fdl/</url>
      
        <content type="html"><![CDATA[<p><em><strong>废话少说，来这的有几个不是因为盗图不显示再去搜索di，盗图一时爽 一直盗图一直爽。🤣</strong></em></p><blockquote><p>言归正传！盗图可耻，请尊重版权！👀</p></blockquote><h3 id="代码在此"><a href="#代码在此" class="headerlink" title="代码在此"></a>代码在此</h3><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>referrer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>never<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>好吧是个标签👅，亲测<code>掘金</code>是可以被盗的，详情可以看此文章 <a href="https://ksh7.com/2020/03/20/js-ms-bf/">点我<del>点我</del></a>。</p><h4 id="注意-注意-注意"><a href="#注意-注意-注意" class="headerlink" title="注意 注意 注意"></a>注意 注意 注意</h4><p>此标签建议不要全局使用，因为它修改了你的所有链接的 <code>Referrer Policy</code> 都指 <code>no-referrer</code>了，这样后端判断以为是浏览器直接打开资源就放行了，但是如果你的网站使用了 <code>ga</code>或者其他需要根据这个判断的链接人家就无法追踪你了，可以使用 <code>iframe包裹一层，用一个单独的html加载统计代码</code>。</p><h5 id="下面列出-Referrer-Policy-的几个参数"><a href="#下面列出-Referrer-Policy-的几个参数" class="headerlink" title="下面列出 Referrer Policy 的几个参数"></a>下面列出 Referrer Policy 的几个参数</h5><pre class="line-numbers language-javascript"><code class="language-javascript">Referrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> no<span class="token operator">-</span>referrerReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> no<span class="token operator">-</span>referrer<span class="token operator">-</span>when<span class="token operator">-</span>downgradeReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> originReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> origin<span class="token operator">-</span>when<span class="token operator">-</span>cross<span class="token operator">-</span>originReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> same<span class="token operator">-</span>originReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> strict<span class="token operator">-</span>originReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> strict<span class="token operator">-</span>origin<span class="token operator">-</span>when<span class="token operator">-</span>cross<span class="token operator">-</span>originReferrer<span class="token operator">-</span>Policy<span class="token punctuation">:</span> unsafe<span class="token operator">-</span>url<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy" target="_blank" rel="noopener">MDN 解释</a></p></blockquote><h1 id="2020-03-26-更新"><a href="#2020-03-26-更新" class="headerlink" title="2020/03/26 更新"></a>2020/03/26 更新</h1><h2 id="HTMLImageElement-referrerPolicy"><a href="#HTMLImageElement-referrerPolicy" class="headerlink" title="HTMLImageElement.referrerPolicy"></a><code>HTMLImageElement.referrerPolicy</code></h2><blockquote><p><code>HTMLImageElement.referrerPolicy</code> 反映了 <code>&lt;img&gt;</code> 元素的HTML属性 referrerpolicy 的定义，这个属性定义了<code>&lt;img&gt;</code> 元素在获取资源时的引用方式。</p></blockquote><h4 id="值"><a href="#值" class="headerlink" title="值"></a>值</h4><ul><li>“no-referrer” 表示HTTP头部信息将不会发送 referrer 。</li><li>“origin” 表示 referrer 只包含策略、主机名、端口等页面源的信息。</li><li>“unsafe-url” 这意味着引用者将包括源站和路径（但不包括片段、密码或用户名）。这种情况是不安全的，因为它可能会泄漏路径信息，这些信息已被使用TLS隐藏到第三方。</li></ul><blockquote><p><code>注意</code>！这是实验中的功能，谷歌、火狐、欧朋 最新版本支持</p></blockquote><h4 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h4><h5 id="未使用的referrerPolicy"><a href="#未使用的referrerPolicy" class="headerlink" title="未使用的referrerPolicy"></a>未使用的<code>referrerPolicy</code></h5><iframe width="100%" srcdoc="<img style='width: 100%;' src='https://juejin.im/post/5e73694c518825494b3cf1f3'>"></iframe><h5 id="使用-referrerPolicy"><a href="#使用-referrerPolicy" class="headerlink" title="使用 referrerPolicy"></a>使用 <code>referrerPolicy</code></h5><iframe style="border: none" width="100%" srcdoc="<img style='width: 100%;' referrerpolicy='no-referrer' src='https://user-gold-cdn.xitu.io/2019/3/14/1697bfadd9dad924?imageView2/0/w/1280/h/960'>"></iframe><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://user-gold-cdn.xitu.io/2019/3/14/1697bfadd9dad924?imageView2/0/w/1280/h/960<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement/referrerPolicy" target="_blank" rel="noopener">MDN for referrerPolicy</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js-面试-并发，记录下并发，并行，串行</title>
      <link href="/2020/03/20/js-ms-bf/"/>
      <url>/2020/03/20/js-ms-bf/</url>
      
        <content type="html"><![CDATA[<h1 id="区分-并发-并行-串行"><a href="#区分-并发-并行-串行" class="headerlink" title="区分 并发 并行 串行"></a>区分 并发 并行 串行</h1><p>之前很容易搞混 并发和并行，所以记录一哈</p><h4 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h4><blockquote><p>两个或多个事件在同一时间，间隔发生。</p></blockquote><h4 id="并行"><a href="#并行" class="headerlink" title="并行"></a>并行</h4><blockquote><p>两个或多个事件在同一时间执行</p></blockquote><p>或者<code>并发</code>是同一实体上的多个事件而<code>并行</code>是不同实体上的多个事件。</p><h4 id="来看一个并发的面试题"><a href="#来看一个并发的面试题" class="headerlink" title="来看一个并发的面试题"></a>来看一个并发的面试题</h4><meta name="referrer" content="never"><p><a href="https://user-gold-cdn.xitu.io/2019/3/14/1697bfadd9dad924?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-fancybox="group" data-caption="image" class="fancybox"><img alt="image" data-src="https://user-gold-cdn.xitu.io/2019/3/14/1697bfadd9dad924?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" class="lazyload" title="image"></a></p><details>    <summary>      看前试试水    </summary><pre><code>const urls = Array.from({ length: 10 }).map((v, i) =&gt; i);const sleep = url =&gt; new Promise(resolve =&gt; setTimeout(resolve, Math.random() * 3000 + 1000))const sendRequest = (urls, limit, callback) =&gt; {    const copyUrls = urls.slice(0)    let index = 0;    const requestUrl = () =&gt; {      index += 1;      console.log(&#39;当前并发&#39;, index, &#39;- - -  - -  -&#39;);      sleep(copyUrls.shift())        .then(res =&gt; {          index -= 1;          console.log(&#39;剩余并发&#39;, limit - index, &#39;- - -  - -  -&#39;);          if(copyUrls.length) requestUrl();          else if(index === 0) callback?.();        })      if(index &lt; limit) requestUrl();    }    requestUrl();  }  sendRequest(urls, 4, () =&gt; console.log(&#39;run callback&#39;)));</code></pre><p><button id="ms-btn">点我运行，在console中查看结果</button></p><script>    const urls = Array.from({ length: 10 }).map((v, i) => i);    const sleep = url => new Promise(resolve => setTimeout(resolve, Math.random() * 3000 + 1000))    const sendRequest = (urls, limit, callback) => {        const copyUrls = urls.slice(0);        let index = 0;        const requestUrl = () => {          index += 1;          console.log('当前并发', index, '- - -  - -  -');          sleep(copyUrls.shift())            .then(res => {              index -= 1;              console.log(`%c 剩余并发 ${limit - index} - - - `, 'color: red');              // console.log('剩余并发', limit - index, '- - -  - -  -');              if(copyUrls.length) requestUrl();              else if(index === 0) callback?.();            });          if(index < limit) requestUrl();        };        requestUrl();      };   const btn = document.getElementById('ms-btn');   btn.onclick = () => sendRequest(urls, 4, () => console.log('%c run callback', 'color: green'))</script></details>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>parabola-js demo page</title>
      <link href="/2020/03/19/demo-parabola-js/"/>
      <url>/2020/03/19/demo-parabola-js/</url>
      
        <content type="html"><![CDATA[ <style>   .wrap {     overflow: hidden;   }   .box-1 {     position: relative;     width: 70%;     height: 400px;     margin: 100px auto;     border: 1px solid;   }   .r-item {     position: absolute;     top: 20%;     right: 0;     width: 50px;     height: 50px;     background-color: #00c4b6;   }   .r-target {     position: absolute;     top: 0;     left: 0;     width: 50px;     height: 50px;     background-color: #8e908c;     visibility: hidden;   } </style> <body> <section class="wrap">   <p>抛物线测试</p>   <hr>   <div class="box-1">     <div class="r-item"></div>     <div class="r-target"></div>   </div> </section> </body>    <script src="https://cdn.jsdelivr.net/npm/parabola-js@1.0.1/lib/parabola.js"></script> <script>      const box1 = document.querySelector('.box-1');      const rItem = document.querySelector('.r-item');      const rTarget = document.querySelector('.r-target');          // ie8+ 1      box1.addEventListener('click', e => {        const diffX = e.offsetX + box1.scrollLeft;        const diffY = e.offsetY + box1.scrollTop;        rTarget.style.left = diffX + 'px';        rTarget.style.top = diffY + 'px';        new Parabola(rItem, rTarget, {          endScale: '0.3',        }).init();      }) </script><h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>抛物线测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>r-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>r-target<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/parabola-js@1.0.1/lib/parabola.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><pre class="line-numbers language-javascript"><code class="language-javascript">    <span class="token keyword">const</span> box1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box-1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> rItem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.r-item'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> rTarget <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.r-target'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ie8+ 1</span>    box1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> diffX <span class="token operator">=</span> e<span class="token punctuation">.</span>offsetX <span class="token operator">+</span> box1<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">;</span>    <span class="token keyword">const</span> diffY <span class="token operator">=</span> e<span class="token punctuation">.</span>offsetY <span class="token operator">+</span> box1<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>    rTarget<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> diffX <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    rTarget<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> diffY <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">new</span> <span class="token class-name">Parabola</span><span class="token punctuation">(</span>rItem<span class="token punctuation">,</span> rTarget<span class="token punctuation">,</span> <span class="token punctuation">{</span>      endScale<span class="token punctuation">:</span> <span class="token string">'0.3'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> demo-page </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>css svg loading demo</title>
      <link href="/2020/03/13/css-svg-loading/"/>
      <url>/2020/03/13/css-svg-loading/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>本篇将记录一些 loading demo。</code></p></blockquote><h2 id="通过svg属性stroke-dashoffset-偏移和svg的差速旋转实现-loading"><a href="#通过svg属性stroke-dashoffset-偏移和svg的差速旋转实现-loading" class="headerlink" title="通过svg属性stroke-dashoffset 偏移和svg的差速旋转实现 loading"></a>通过svg属性<code>stroke-dashoffset</code> 偏移和svg的差速旋转实现 loading</h2><blockquote><p>了解 <code>stroke-dashoffset</code><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dashoffset" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dashoffset</a></p></blockquote><h3 id="loading-1"><a href="#loading-1" class="headerlink" title="loading-1"></a>loading-1</h3><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><style>.svg-loading-wrap {  margin: 10px auto 10px 10px;}.svg-loading-wrap .item .load {  width: 75px;  animation: loading 3s linear infinite;}.svg-loading-wrap .item .load #loading-inner {  stroke-dashoffset: 0;  stroke-dasharray: 300;  stroke-width: 10;  stroke-miterlimit: 10;  stroke-linecap: round;  animation: loading-circle 2s linear infinite;  stroke: #00adb5;  fill: transparent;}@keyframes loading {  0% {    transform: rotate(0);  }  100% {    transform: rotate(360deg);  }}@keyframes loading-circle {  0% {    stroke-dashoffset: 0;  }  100% {    stroke-dashoffset: -600;  }}.svg-loading-wrap .loading-2 .l-svg {  animation: loading2-svg linear 3s infinite;}.svg-loading-wrap .loading-2 .l-svg .l-circle {  fill: transparent;  stroke: #7c4dff;  stroke-width: 10;  stroke-dasharray: 300;  stroke-dashoffset: 0;  stroke-miterlimit: 10;  animation: loading2-circle linear 2s infinite;}@keyframes loading2-svg {  from {    transform: rotate(0deg);  }  to {    transform: rotate(360deg);  }}@keyframes loading2-circle {  from {    stroke-dashoffset: 0;  }  to {    stroke-dashoffset: -600;  }}.svg-loading-wrap .loading-3 {  width: 50px;  height: 50px;  margin: 0 auto;  position: relative;  border-radius: 50%;  background-color: rgba(0, 169, 178, 0.2);}.svg-loading-wrap .loading-3::before {  content: "";  width: 70px;  height: 70px;  background-color: #00adb5;  position: absolute;  left: 50%;  bottom: 50%;  z-index: 1;}.svg-loading-wrap .loading-3::after {  width: 40px;  height: 40px;  position: absolute;  left: 0;  right: 0;  top: 0;  bottom: 0;  margin: auto;  background-color: #fff;  z-index: 2;  border-radius: 50%;}@keyframes rotate {  0% {    transform: rotate(0);  }  50% {    transform: rotate(180deg);  }  100% {    transform: rotate(360deg);  }}.svg-loading-wrap .loading-4 {  position: relative;  width: 75px;  height: 75px;  border-radius: 50%;  background-color: rgba(78, 167, 249, 0.21);  overflow: hidden;}.svg-loading-wrap .loading-4::after {  content: '';  position: absolute;  top: 0;  bottom: 0;  left: 0;  right: 0;  margin: auto;  width: 65px;  height: 65px;  border-radius: 50%;  background-color: #fff;}.svg-loading-wrap .loading-4::before {  content: '';  position: absolute;  bottom: 50%;  left: 50%;  width: 100%;  height: 100%;  background-color: #00adb5;  animation: loading4-rotate 1.5s linear infinite;  transform-origin: bottom left;}@keyframes loading4-rotate {  0% {    transform: rotate(0deg);  }  50% {    transform: rotate(180deg);  }  100% {    transform: rotate(360deg);  }}/*# sourceMappingURL=svg-loading.css.map */</style><section class="svg-loading-wrap">  <div class="loading-2">    <svg class="l-svg" width="75" viewbox="0 0 150 150">      <g>        <circle class="l-circle" r="65" cx="75" cy="75" stroke-linecap="round" stroke-opacity="0.7"/>      </g>    </svg>  </div></section><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>l-svg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 150 150<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span>            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>l-circle<span class="token punctuation">"</span></span>            <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>65<span class="token punctuation">"</span></span>            <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span>            <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span>            <span class="token attr-name">stroke-linecap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>round<span class="token punctuation">"</span></span>            <span class="token attr-name">stroke-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.7<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><pre class="line-numbers language-less"><code class="language-less">  <span class="token selector">.loading-2</span> <span class="token punctuation">{</span>    <span class="token selector">.l-svg</span> <span class="token punctuation">{</span>      <span class="token property">animation</span><span class="token punctuation">:</span> loading<span class="token number">2</span><span class="token operator">-</span>svg linear <span class="token number">3</span>s infinite<span class="token punctuation">;</span>      <span class="token selector">.l-circle</span> <span class="token punctuation">{</span>        <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token hexcode">#7c4dff</span><span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>        <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">stroke-miterlimit</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> loading<span class="token number">2</span><span class="token operator">-</span>circle linear <span class="token number">2</span>s infinite<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token atrule">@keyframes loading2-svg</span> <span class="token punctuation">{</span>      <span class="token selector">from</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">to</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token atrule">@keyframes loading2-circle</span> <span class="token punctuation">{</span>      <span class="token selector">from</span> <span class="token punctuation">{</span>        <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">to</span> <span class="token punctuation">{</span>        <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">600</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="loading-2"><a href="#loading-2" class="headerlink" title="loading-2"></a>loading-2</h2><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><blockquote><p>通过伪类遮盖，修改旋转 origin 来达到此 loading</p></blockquote><section class="svg-loading-wrap">  <div class="loading-4"></div></section><h4 id="html-1"><a href="#html-1" class="headerlink" title="html"></a>html</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="css-1"><a href="#css-1" class="headerlink" title="css"></a>css</h4><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.loading-4</span> </span><span class="token punctuation">{</span>    <span class="token selector">position: relative;    width: 75px;    height: 75px;    border-radius: 50%;    background-color: rgba(78, 167, 249, 0<span class="token class">.21</span>);    overflow: hidden;    // 10px的"边框"    &amp;<span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">65</span>px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">65</span>px<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">// 转圈的矩形    &amp;<span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#00adb5</span><span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> loading<span class="token number">4</span>-rotate <span class="token number">1.5</span>s linear infinite<span class="token punctuation">;</span>      <span class="token property">transform-origin</span><span class="token punctuation">:</span> bottom left<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> loading4-rotate</span> <span class="token punctuation">{</span>      <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">50% </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-svg实现小于12号字体</title>
      <link href="/2020/03/12/css-svg-12px-fontsize/"/>
      <url>/2020/03/12/css-svg-12px-fontsize/</url>
      
        <content type="html"><![CDATA[<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><style>  .s12-wrap {    display: flex;    align-items: center;    justify-content: center;  }  .s12-d {    width: max-content;    margin: 20px auto;  }</style><div class="s12-d">  <input id="s12-inp" style="width: 100px;" type="number" max="12" min="1" placeholder="font size" value="12"></div><section class="s12-wrap">  <p style="font-size: 12px; margin: 0;padding-right: 10px;">    千山鸟飞绝 - from hill to hill no bird in flight  </p>  <svg style="flex: 0.4" id="size-svg" width="auto" height="14">    <text id="size-text" dominant-baseline="baseline" font-size="12" y="12" style="line-height: 1; vertical-align: middle;">      千山鸟飞绝 - from hill to hill no bird in flight    </text>  </svg></section><script>  const svg = document.getElementById('size-svg');  const sText = document.getElementById('size-text');  const inp = document.getElementById('s12-inp');  let size = 12;  const fontsizeHeightMap = {    1: 1.22,    2: 2.52,    3: 3.63,    4: 5.02,    5: 6.03,    6: 7.52,    7: 8.52,    8: 9.14,    9: 10.52,    10: 11.52,    11: 13.02,    12: 14  };  const changeAttr = size => {    const value = fontsizeHeightMap[size];    svg.setAttribute('height', value);    if (size < 3) {      sText.setAttribute('y', value)    } else if (size === 3) {      sText.setAttribute('y', (value - 1).toFixed(2))    } else {      sText.setAttribute('y', (value - 2).toFixed(2))    }    sText.setAttribute('font-size', size);    inp.value = size;  };  inp.addEventListener('change', e => {    const num = e.target.value * 1;    console.log(num);    if (num > 12) size = 12;    else if (num < 0) size = 1;    else size = num;    changeAttr(size);  })</script><h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>s12-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    千山鸟飞绝 - from hill to hill no bird in flight  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>size-svg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>205.515625<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span>        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>size-text<span class="token punctuation">"</span></span>        <span class="token attr-name">dominant-baseline</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baseline<span class="token punctuation">"</span></span>        <span class="token attr-name">font-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span>        <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      千山鸟飞绝 - from hill to hill no bird in flight    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="js"><a href="#js" class="headerlink" title="js"></a>js</h1><pre class="line-numbers language-javascript"><code class="language-javascript">  <span class="token keyword">const</span> svg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'size-svg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> sText <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'size-text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> inp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'s12-inp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> fontsizeHeightMap <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">1.22</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">2.52</span><span class="token punctuation">,</span>    <span class="token number">3</span><span class="token punctuation">:</span> <span class="token number">3.63</span><span class="token punctuation">,</span>    <span class="token number">4</span><span class="token punctuation">:</span> <span class="token number">5.02</span><span class="token punctuation">,</span>    <span class="token number">5</span><span class="token punctuation">:</span> <span class="token number">6.03</span><span class="token punctuation">,</span>    <span class="token number">6</span><span class="token punctuation">:</span> <span class="token number">7.52</span><span class="token punctuation">,</span>    <span class="token number">7</span><span class="token punctuation">:</span> <span class="token number">8.52</span><span class="token punctuation">,</span>    <span class="token number">8</span><span class="token punctuation">:</span> <span class="token number">9.14</span><span class="token punctuation">,</span>    <span class="token number">9</span><span class="token punctuation">:</span> <span class="token number">10.52</span><span class="token punctuation">,</span>    <span class="token number">10</span><span class="token punctuation">:</span> <span class="token number">11.52</span><span class="token punctuation">,</span>    <span class="token number">11</span><span class="token punctuation">:</span> <span class="token number">13.02</span><span class="token punctuation">,</span>    <span class="token number">12</span><span class="token punctuation">:</span> <span class="token number">14</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> changeAttr <span class="token operator">=</span> size <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> value <span class="token operator">=</span> fontsizeHeightMap<span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>    svg<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      sText<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      sText<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      sText<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    sText<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'font-size'</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span>    inp<span class="token punctuation">.</span>value <span class="token operator">=</span> size<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  inp<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> num <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">1</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">)</span> size <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> size <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> size <span class="token operator">=</span> num    <span class="token function">changeAttr</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>Tip</strong><br>使用 svg 作为解决小于 12px 字号文字的方案：<br>使用 transform: scale() 设置后占位区域并没有改变，难以调节对齐方式。<br>使用 canvas 无法选中文字（也可以解决，但不如 svg 简洁）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-手风琴动效</title>
      <link href="/2020/03/12/css-shouFengQin/"/>
      <url>/2020/03/12/css-shouFengQin/</url>
      
        <content type="html"><![CDATA[<style>.sfq-wrap {  width: 100%;  min-width: 400px;  margin: 100px auto;}.sfq-wrap ul,.sfq-wrap li {  padding: 0;  margin: 0;  list-style: none;}.sfq-wrap .list {  display: flex;  overflow: hidden;  justify-content: flex-start;  align-items: flex-start;}.sfq-wrap .list > li {  display: flex;  justify-content: center;  align-items: center;  position: relative;  padding: 10px;  height: 500px;  width: 600px;  transition: width 0.5s;  font-size: 18px;  font-weight: bold;  color: #fff;  background-position: center;  background-size: 500px;  background-repeat: no-repeat;  will-change: width;}.sfq-wrap .list > li:not(:hover) {  width: 20%;}.sfq-wrap .list > li::after {  content: '';  position: absolute;  top: 0;  left: 0;  right: 0;  bottom: 0;  background: rgba(0, 0, 0, 0.3);  opacity: 0;  transition: opacity 0.5s;}.sfq-wrap .list > li:hover::after {  opacity: 1;}.sfq-wrap .list > li > p {  margin: 0;  position: relative;  z-index: 1;}.sfq-wrap .list > li:first-child {  background-image: url("http://css-tricks.neatbang.com/assets/img/bg7.af68deb6.jpeg");}.sfq-wrap .list > li:nth-of-type(2) {  background-image: url("http://css-tricks.neatbang.com/assets/img/bg10.eaa9de63.jpeg");}.sfq-wrap .list > li:nth-of-type(3) {  background-image: url("http://css-tricks.neatbang.com/assets/img/bg9.aa9a9041.jpeg");}.sfq-wrap .list > li:nth-of-type(4) {  background-image: url("http://css-tricks.neatbang.com/assets/img/bg7.af68deb6.jpeg");}.sfq-wrap .list > li:nth-of-type(5) {  background-image: url("http://css-tricks.neatbang.com/assets/img/bg10.eaa9de63.jpeg");}.sfq-wrap .modal {  position: absolute;  top: 0;  left: 0;  right: 0;  bottom: 0;  margin: 0;  background: rgba(0, 0, 0, 0.3);  line-height: 100%;}/*# sourceMappingURL=sfq.css.map */</style><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><section class="sfq-wrap">  <ul class="list">    <li class="list">      <p class="text">1</p>    </li>    <li class="list">      <p class="text">2</p>    </li>    <li class="list">      <p class="text">3</p>    </li>    <li class="list">      <p class="text">4</p>    </li>    <li class="list">      <p class="text">6</p>    </li>  </ul></section><h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><pre class="line-numbers language-less"><code class="language-less"><span class="token selector">.sfq-wrap</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>  <span class="token selector">ul, li</span> <span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.list</span> <span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> flex<span class="token operator">-</span>start<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> flex<span class="token operator">-</span>start<span class="token punctuation">;</span><span class="token selector">> li</span> <span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> width <span class="token number">.5</span>s<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>  <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>  <span class="token property">background-repeat</span><span class="token punctuation">:</span> no<span class="token operator">-</span>repeat<span class="token punctuation">;</span>  <span class="token property">will-change</span><span class="token punctuation">:</span> width<span class="token punctuation">;</span>  <span class="token selector">&amp;:not(:hover)</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">> p</span> <span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sfq-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三角边框-实心/镂空</title>
      <link href="/2020/03/11/san-jiao-bian-kuang/"/>
      <url>/2020/03/11/san-jiao-bian-kuang/</url>
      
        <content type="html"><![CDATA[<h1 id="实心边框"><a href="#实心边框" class="headerlink" title="实心边框"></a>实心边框</h1><style>  .sanjiao-wrap {    width: 400px;    min-height: 100px;    padding: 20px;    margin: 100px auto;    border: 1px solid;  }  .sanjiao-box-1 {    width: max-content;    margin: 0 auto;    border-width: 0 30px 30px;    /*border-color: transparent transparent black black;*/    border-color: transparent transparent black;    border-style: solid;  }  .sanjiao-box-2 {    --width: 50px;    margin-top: 20px;    width: 0;    height: 0;    border-style: solid;    border-width: 0 var(--width) var(--width) var(--width);    position:relative;    border-color: transparent transparent #fff transparent;  }    .sanjiao-box-2::after {    --width: 52px;    content: '';    border-style: solid;    border-width: 0 var(--width) var(--width) var(--width);    border-color: transparent transparent #00adb5 transparent;    position: absolute;    left: -52px;    top: -1px;    z-index: -1;  }</style><section class="sanjiao-wrap">  <div class="sanjiao-box-1"></div></section><pre class="line-numbers language-css"><code class="language-css">  <span class="token selector"><span class="token class">.box-1</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> max-content<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">30</span>px <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-color: transparent transparent black black;*/</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent black<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-htnl"><code class="language-htnl">    <section class="wrap">      <div class="box-1"></div>    </section><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="镂空"><a href="#镂空" class="headerlink" title="镂空"></a>镂空</h1><section class="sanjiao-wrap">  <div class="sanjiao-box-1 sanjiao-box-2"></div></section><pre class="line-numbers language-css"><code class="language-css">  <span class="token selector"><span class="token class">.box-2</span> </span><span class="token punctuation">{</span>    <span class="token property">--width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent <span class="token hexcode">#fff</span> transparent<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.box-2</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token property">--width</span><span class="token punctuation">:</span> <span class="token number">52</span>px<span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span> <span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent <span class="token hexcode">#00adb5</span> transparent<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">52</span>px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">1</span>px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box-1 box-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>底部 footer 自适应</title>
      <link href="/2020/03/11/btn-sticky-footer/"/>
      <url>/2020/03/11/btn-sticky-footer/</url>
      
        <content type="html"><![CDATA[<h5 id="底部-footer-自适应在底部"><a href="#底部-footer-自适应在底部" class="headerlink" title="底部 footer 自适应在底部"></a>底部 footer 自适应在底部</h5><style>  .btn-wrap {    position: relative;    width: 300px;    height: 500px;    overflow-y: auto;    margin: 100px auto;    border: 1px solid;  }  .btn-content-wrap {    min-height: 100%;    text-align: center;    background-color: azure;  }  .btn-content {    padding-bottom: 40px;  }  .btn-footer {    margin-top: -40px;    background-color: #00adb5;    line-height: 40px;    color: #fff;    text-align: center;  }  .btn-s-input:checked ~ .btn-content > .btn-s-text {    display: none;  }</style><section class="btn-wrap">  <div class="btn-content-wrap">    <input class="btn-s-input" type="checkbox">    <label>隐藏</label>    <div class="btn-content">      <p class="btn-s-text">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容      </p>    </div>  </div>  <footer class="btn-footer">    footer  </footer></section><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><pre class="line-numbers language-css"><code class="language-css">  <span class="token selector"><span class="token class">.wrap</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.content-wrap</span> </span><span class="token punctuation">{</span>    <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> azure<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.content</span> </span><span class="token punctuation">{</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.footer</span> </span><span class="token punctuation">{</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">40</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#00adb5</span><span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>s-input<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>隐藏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>s-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    footer  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 实现毛玻璃</title>
      <link href="/2020/03/11/filter-glass/"/>
      <url>/2020/03/11/filter-glass/</url>
      
        <content type="html"><![CDATA[<h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><ul><li>filter: blur(x px);</li></ul><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><style>  .f-wrap {    height: 400px;    position: relative;    background:        url("/img/filter-glass/bg1.jpg") no-repeat 0 / 100% fixed;  }  .f-box-1 {    position: absolute;    /*left: 50%;*/    /*top: 50%;*/    /*transform: translate3d(-50%, -50%, 0);*/    left: 0;    right: 0;    top: 0;    bottom: 0;    margin: auto;    z-index: 1;    width: 80%;    height: 55%;    box-sizing: border-box;    padding: 66px 30px;    background-color: rgba(255, 255, 255, 0.5);    font-size: 18px;  }  .f-box-1::after {    content: '';    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;    filter: blur(10px);    background: url("/img/filter-glass/bg1.jpg") no-repeat 0 / 100% fixed;    z-index: -1;  }  .f-footer {    font-size: 14px;    text-align: right;  }</style><section class="f-wrap">  <div class="f-box-1">    123    <footer class="f-footer">--      <cite>李白 《梦游天姥吟留别》</cite>    </footer>  </div></section><h5 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h5><blockquote><p>background-attachment: fixed;<br>使用此属性时 背景<code>size</code>和<code>定位</code>是依据向上查找到第一个属性为 <code>overflow: auto</code> 的父元素</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绝对定位-元素宽度自动撑开</title>
      <link href="/2020/03/10/css-position-width/"/>
      <url>/2020/03/10/css-position-width/</url>
      
        <content type="html"><![CDATA[<style>  .wrap {    position: relative;    margin: auto;    height: 30px;    width: 120px;    margin-bottom: 50px;    border: 1px solid blue;  }  .wrap > div {     position: absolute;    border: 1px solid;   }  .box-1 {    left: 50%;    transform: translateX(-50%);  }</style><h1 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h1><h5 id="当父级出现定宽高情况下，子级绝对定位元素需要宽度撑开时。"><a href="#当父级出现定宽高情况下，子级绝对定位元素需要宽度撑开时。" class="headerlink" title="当父级出现定宽高情况下，子级绝对定位元素需要宽度撑开时。"></a>当父级出现定宽高情况下，子级绝对定位元素需要宽度撑开时。</h5><h6 id="原场景"><a href="#原场景" class="headerlink" title="原场景"></a>原场景</h6><section class="wrap">    我是父级 100px  <div class="box-1">    <p>子元素-撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑</p>  </div></section><pre class="line-numbers language-css"><code class="language-css">  <span class="token selector"><span class="token class">.box-1</span> </span><span class="token punctuation">{</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-width-max-content"><a href="#1-width-max-content" class="headerlink" title="1. width: max-content"></a>1. width: max-content</h4><style>    .wrap1 {    z-index: 2;        /*overflow-y: initial !important;*/    }    .box-2 {        width: max-content;    }</style><section class="wrap wrap1">    我是父级 100px  <div class="box-1 box-2">    <p>子元素-撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑</p>  </div></section><pre class="line-numbers language-diff"><code class="language-diff">  .box-1 {    left: 50%;    transform: translateX(-50%);<span class="token inserted">+   width: max-content;</span>  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-white-space-nowrap"><a href="#2-white-space-nowrap" class="headerlink" title="2. white-space: nowrap;"></a>2. white-space: nowrap;</h4><style>    .box-3 {        white-space: nowrap;    }</style><section class="wrap wrap1">    我是父级 100px  <div class="box-1 box-3">    <p>子元素-撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑撑</p>  </div></section><pre class="line-numbers language-diff"><code class="language-diff">  .box-1 {    left: 50%;    transform: translateX(-50%);<span class="token inserted">+    white-space: nowrap;</span>  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双线部署博客，解决 github 访问速度问题</title>
      <link href="/2020/03/09/update-theme-fluid/"/>
      <url>/2020/03/09/update-theme-fluid/</url>
      
        <content type="html"><![CDATA[<h1 id="项目部署-Github-并且仓库名为-quot-userName-quot-github-io"><a href="#项目部署-Github-并且仓库名为-quot-userName-quot-github-io" class="headerlink" title="项目部署 Github 并且仓库名为 &quot;userName&quot;.github.io"></a>项目部署 Github 并且仓库名为 <code>&quot;userName&quot;</code>.github.io</h1><p><a href="https://kshao.coding.net/p/web-pic/d/web-pic/git/raw/master/blog-pic/update-theme-fluid/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-03-09%2020.47.47.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://kshao.coding.net/p/web-pic/d/web-pic/git/raw/master/blog-pic/update-theme-fluid/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-03-09%2020.47.47.png" class="lazyload" title></a></p><h1 id="项目设置绑定域名，建议开启-https"><a href="#项目设置绑定域名，建议开启-https" class="headerlink" title="项目设置绑定域名，建议开启 https"></a>项目设置绑定域名，建议开启 https</h1><h5 id="在-项目-设置-githubPage-下绑定域名"><a href="#在-项目-设置-githubPage-下绑定域名" class="headerlink" title="在 项目/设置/githubPage 下绑定域名"></a>在 项目/设置/githubPage 下绑定域名</h5><p><a href="/img/update-theme-fluid/1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="/img/update-theme-fluid/1.png" class="lazyload" title></a></p><h4 id="域名绑定页面，选-cname-github-给的二级域名-，线路：境外"><a href="#域名绑定页面，选-cname-github-给的二级域名-，线路：境外" class="headerlink" title="域名绑定页面，选 cname(github 给的二级域名)，线路：境外"></a>域名绑定页面，选 cname(github 给的二级域名)，线路：境外</h4><h1 id="项目部署到-coding-上"><a href="#项目部署到-coding-上" class="headerlink" title="项目部署到 coding 上"></a>项目部署到 coding 上</h1><blockquote><p><a href="https://coding.net" target="_blank" rel="noopener">https://coding.net</a></p></blockquote><h4 id="项目-构建与部署-点立即部署（后续可自动化部署）"><a href="#项目-构建与部署-点立即部署（后续可自动化部署）" class="headerlink" title="项目/构建与部署 点立即部署（后续可自动化部署）"></a>项目/构建与部署 点立即部署（后续可自动化部署）</h4><h5 id="同页面上半部分找到二级域名为-cname，线路选择默认。并在当前页面的设置里绑定你的域名（申请证书失败的话需要把域名境外线路调回默认）"><a href="#同页面上半部分找到二级域名为-cname，线路选择默认。并在当前页面的设置里绑定你的域名（申请证书失败的话需要把域名境外线路调回默认）" class="headerlink" title="同页面上半部分找到二级域名为 cname，线路选择默认。并在当前页面的设置里绑定你的域名（申请证书失败的话需要把域名境外线路调回默认）"></a>同页面上半部分找到二级域名为 cname，线路选择默认。并在当前页面的设置里绑定你的域名（申请证书失败的话需要把域名境外线路调回默认）</h5><h3 id="hexo-快速部署项目插件"><a href="#hexo-快速部署项目插件" class="headerlink" title="hexo 快速部署项目插件"></a>hexo 快速部署项目插件</h3><h6 id="以下为-ssh-连接，可自行百度（双账号邮箱建议保持一致，方便注册-ssh）"><a href="#以下为-ssh-连接，可自行百度（双账号邮箱建议保持一致，方便注册-ssh）" class="headerlink" title="以下为 ssh 连接，可自行百度（双账号邮箱建议保持一致，方便注册 ssh）"></a>以下为 ssh 连接，可自行百度（双账号邮箱建议保持一致，方便注册 ssh）</h6><pre class="line-numbers language-yaml"><code class="language-yaml">npm i hexo<span class="token punctuation">-</span>deployer<span class="token punctuation">-</span>git <span class="token punctuation">-</span>Syarn add hexo<span class="token punctuation">-</span>deployer<span class="token punctuation">-</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="hexo-配置文件"><a href="#hexo-配置文件" class="headerlink" title="hexo 配置文件"></a>hexo 配置文件</h4><pre class="line-numbers language-diff"><code class="language-diff"> deploy:  type: git # 触发分支  branch: master  repo:    github: git@github.com:&lt;userName>/&lt;projectName>.git    coding: git@e.coding.net:xxx/xxx.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="触发流程"><a href="#触发流程" class="headerlink" title="触发流程"></a>触发流程</h5><pre class="line-numbers language-yaml"><code class="language-yaml">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 其他教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动歌词</title>
      <link href="/2019/07/02/music-gun/"/>
      <url>/2019/07/02/music-gun/</url>
      
        <content type="html"><![CDATA[<h4 id="滚动歌词"><a href="#滚动歌词" class="headerlink" title="滚动歌词"></a>滚动歌词</h4><ol><li>把获取到的歌词 用换行符 split 分割</li><li>使用正则判断并分割出时间和歌词</li><li>把正则匹配出的 分、秒、毫秒 转换成秒 做 key 传入 temp 对象，或者 push 数组也可以，没有 key 的排序问题</li><li>通过 temp 遍历出 html 元素放入 content</li><li>监听 audio 的 [on]timeupdate 事件，关键字 e.target.currentTime 为当前播放时间</li><li>根据 时间 找到 匹配的歌词元素，计算元素的 top 与 父元素 top 的差，即为上滚的距离</li><li>滚动时给当前 歌词元素 加上 active class 使其突出</li></ol><h6 id="获取到的歌词可在-log-里查看"><a href="#获取到的歌词可在-log-里查看" class="headerlink" title="获取到的歌词可在 log 里查看"></a>获取到的歌词可在 log 里查看</h6><style>    audio {        width: 300px;        height: 100px;      }          .lrc-box {        margin: 100px auto;      }          .lrc-wrap {        margin: auto;        width: 80%;        height: 400px;        background-color: rgba(153, 204, 153, 0.48);        overflow: hidden;        padding: 0 15px;        position: relative;      }          .lrc-content {        margin-top: 60px;        position: absolute;        text-align: center;        padding-top: 60px;        left: 50%;        transform: translate(-50%, 0);        transition: all 1s;      }          .lrc-content p {        text-align: center;        transition: all .1s;        /*transition-delay: .4s;*/      }          .active {        color: white;        background-color: hotpink;      }</style><div class="lrc-box"><audio id="musicBtn" style="width: 200px; height: 100px" autoplay controls="controls" src="../assets/music-gun/music.mp3"> </audio>  <div class="lrc-wrap">    <div class="lrc-content">    </div>  </div></div><script>const data = {    music: "[00:01.00]岁月神偷 - 金玟岐\n" +        "[00:06.00]\n" +        "[00:07.50]歌词编辑：\n" +        "[00:12.50]QQ：123123\n" +        "[00:17.50]\n" +        "[00:19.04]能够握紧的就别放了\n" +        "[00:23.09]能够拥抱的就别拉扯\n" +        "[00:27.22]时间着急的 冲刷着\n" +        "[00:31.65]剩下了什么\n" +        "[00:35.18]原谅走过的那些曲折\n" +        "[00:39.14]原来留下的都是真的\n" +        "[00:43.22]纵然似梦啊 半醒着\n" +        "[00:47.35]笑着哭着都快活\n" +        "[00:51.69]谁让\n" +        "[00:54.73]时间是让人猝不及防的东西\n" +        "[00:58.95]晴时有风阴有时雨\n" +        "[01:02.95]争不过朝夕 又念着往昔\n" +        "[01:06.93]偷走了青丝却留住一个你\n" +        "[01:11.00]岁月是一场有去无回的旅行\n" +        "[01:15.01]好的坏的都是风景\n" +        "[01:18.98]别怪我贪心 只是不愿醒\n" +        "[01:22.98]因为你只为你愿和我一起\n" +        "[01:27.00]看云淡风轻\n" +        "[01:31.14]\n" +        "[01:42.91]时间是让人猝不及防的东西\n" +        "[01:46.92]晴时有风阴有时雨\n" +        "[01:50.91]争不过朝夕 又念着往昔\n" +        "[01:54.92]偷走了青丝却留住一个你\n" +        "[01:58.89]岁月是一场有去无回的旅行\n" +        "[02:02.88]好的坏的都是风景\n" +        "[02:06.96]别怪我贪心 只是不愿醒\n" +        "[02:10.86]因为你只为你愿和我一起\n" +        "[02:16.32]看云淡风轻\n" +        "[02:20.07]"};console.log(data.music);const temp = {};const LRC = data.music;const matchLrc = LRC.split(/\n/);const reg = /\[(\d{2}):(\d{2})\.(\d{2})](.*)/;for (let i = 0; i < matchLrc.length; i += 1) {   const item = matchLrc[i];   // exec 没有匹配返回 null   const res = reg.exec(item);   if (! reg) continue;   const [_, m, s, ms, text] = res;   // 将他们转成秒 毫秒也可以做秒的四舍五入操作   // const key = (m * 60) + Math.round(s);   // - 0 05 - 0 = 5   // console.log((m * 60) + ((s + '.' + ms) - 0));   const key = (m * 60) + (s - 0);   temp[key] = text;}let html = '';for (let time in temp) {   html += `<p time=${time}>${temp[time]}</p>`}const lrcContent = document.querySelector('.lrc-content');lrcContent.innerHTML = html;const musicBtn = document.getElementById('musicBtn');let index = -1;musicBtn.ontimeupdate = e => {   // 获取秒数 与 dom 元素对应   // console.log(e.target.currentTime, 'time');   const key = Math.floor(e.target.currentTime);   if (! temp[key]) return;   const p = lrcContent.querySelector(`p[time='${key}']`);   // 此时的 p top值，大于 content，用 p - content 的 top 值，即为需要移动的距离   const far = p.offsetTop - lrcContent.offsetTop;   lrcContent.style.transform = `translate(-50%, -${far}px)`;   p.classList.add('active');   if (index > -1 && index !== key) lrcContent.querySelector(`p[time='${index}']`).classList.remove('active');   index = key;}</script><pre class="line-numbers language-javascript"><code class="language-javascript">data<span class="token punctuation">.</span>music <span class="token operator">=</span> <span class="token string">'歌词'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 歌词在 log 自行复制</span><span class="token keyword">const</span> temp <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> LRC <span class="token operator">=</span> data<span class="token punctuation">.</span>music<span class="token punctuation">;</span><span class="token keyword">const</span> matchLrc <span class="token operator">=</span> LRC<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex">/\n/</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex">/\[(\d{2}):(\d{2})\.(\d{2})](.*)/</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> matchLrc<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">const</span> item <span class="token operator">=</span> matchLrc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// exec 没有匹配返回 null</span>   <span class="token keyword">const</span> res <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> reg<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>   <span class="token keyword">const</span> <span class="token punctuation">[</span>_<span class="token punctuation">,</span> m<span class="token punctuation">,</span> s<span class="token punctuation">,</span> ms<span class="token punctuation">,</span> text<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 将他们转成秒 毫秒也可以做秒的四舍五入操作</span>   <span class="token comment" spellcheck="true">// const key = (m * 60) + Math.round(s);</span>   <span class="token comment" spellcheck="true">// - 0 05 - 0 = 5</span>   <span class="token comment" spellcheck="true">// console.log((m * 60) + ((s + '.' + ms) - 0));</span>   <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   temp<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> text<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> time <span class="token keyword">in</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>   html <span class="token operator">+</span><span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;p time=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>temp<span class="token punctuation">[</span>time<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p>`</span></span><span class="token punctuation">}</span><span class="token keyword">const</span> lrcContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.lrc-content'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>lrcContent<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">;</span><span class="token keyword">const</span> musicBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'musicBtn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>musicBtn<span class="token punctuation">.</span>ontimeupdate <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">// 获取秒数 与 dom 元素对应</span>   <span class="token comment" spellcheck="true">// console.log(e.target.currentTime, 'time');</span>   <span class="token keyword">const</span> key <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>currentTime<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> temp<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>   <span class="token keyword">const</span> p <span class="token operator">=</span> lrcContent<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`p[time='</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">']`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 此时的 p top值，大于 content，用 p - content 的 top 值，即为需要移动的距离</span>   <span class="token keyword">const</span> far <span class="token operator">=</span> p<span class="token punctuation">.</span>offsetTop <span class="token operator">-</span> lrcContent<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>   lrcContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token template-string"><span class="token string">`translate(-50%, -</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>far<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>   p<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">!==</span> key<span class="token punctuation">)</span> lrcContent<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`p[time='</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">']`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   index <span class="token operator">=</span> key<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 底部菜单栏动画</title>
      <link href="/2019/07/01/css-tab/"/>
      <url>/2019/07/01/css-tab/</url>
      
        <content type="html"><![CDATA[<p>从中间展开 after 需要<br>设置 position:absolute；left：0；right：0；bottom：0；margin：auto</p><iframe width="100%" height="500" src="//jsfiddle.net/142536yu/fq3pgnx0/embedded/js,html,css,result/dark/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0"></iframe>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css 背景渐变 实现优惠券</title>
      <link href="/2019/07/01/coucpons-bg/"/>
      <url>/2019/07/01/coucpons-bg/</url>
      
        <content type="html"><![CDATA[<h5 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h5><h6 id="线性渐变-径向渐变"><a href="#线性渐变-径向渐变" class="headerlink" title="线性渐变 径向渐变"></a>线性渐变 径向渐变</h6><ol><li>使用径向渐变实现缺口效果</li></ol><iframe width="100%" height="300" src="//jsfiddle.net/142536yu/5qpf47en/4/embedded/js,html,css,result/dark/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0"></iframe>]]></content>
      
      
      <categories>
          
          <category> cssTricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> background </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac + docker 容器搭建本地 gitlab ci runner + ssh | ftp 自动部署</title>
      <link href="/2019/07/01/gitlab-ci/"/>
      <url>/2019/07/01/gitlab-ci/</url>
      
        <content type="html"><![CDATA[<h4 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h4><blockquote><p><a href="https://www.docker.com/products/docker-toolbox" target="_blank" rel="noopener">https://www.docker.com/products/docker-toolbox</a></p></blockquote><h4 id="加速器"><a href="#加速器" class="headerlink" title="加速器"></a>加速器</h4><blockquote><p><a href="https://dashboard.daocloud.io/mirror" target="_blank" rel="noopener">https://dashboard.daocloud.io/mirror</a></p></blockquote><ol><li>点击立即开始－接入自有主机－我已有一台主机－选择MAC－直接点击</li><li>根据步骤 直至控制台显示有你的主机</li><li>去镜像仓库搜索 <code>gitlab-ce</code></li></ol><pre><code>部署镜像可在命令行部署，或者刚刚下载的 Gui 工具内</code></pre><ol start="4"><li>部署好镜像，打开映射的主机端口，会显示重置密码(密码应为 八位+英文字符限制)默认用户名 <code>root</code></li><li>安装 runner 镜像，可在 <a href="https://dashboard.daocloud.io/" target="_blank" rel="noopener">Daocloud</a> 中部署到主机</li><li>注册runner</li></ol><pre class="line-numbers language-yml"><code class="language-yml">在刚刚安装的 gitlab 中创建项目，在项目内的setting选项选中 Ci/CD在 Runners 选项中会看到对应的 链接 和 token<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://i.loli.net/2019/07/01/5d197ecc3e59810455.png" data-fancybox="group" data-caption="image" class="fancybox"><img alt="image" data-src="https://i.loli.net/2019/07/01/5d197ecc3e59810455.png" class="lazyload" title="image"></a></p><ol start="7"><li>注册 runner</li></ol><pre class="line-numbers language-yml"><code class="language-yml">启动 runner 容器，并进入容器docker exec -it runner bash退出命令 exit进入容器输入gitlab-runner register -n \   --url http://172.17.0.3/ \   --registration-token PCfVAC_B_zJWDzz_xxkt \   --executor docker \   --description "runner1" \   --docker-image "node:latest" \   --clone-url http://172.17.0.3/ url：gitlab 的域名，docker内为容器的 IPregistration-token： 刚刚复制的 tokenexecutor： 运行环境description：clone-url： 很重要，不添加可能会报错如下fatal: unable to access 'http://gitlab-ci-token:[MASKED]@f96d3c31771a默认注册输入 gitlab-runner register  是按流程来的有 tag标签按上面步骤需要在 setting/[CI/CD]/runners 设置 tag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="设置完成，可在-setting-CI-CD-runners-看到-runner"><a href="#设置完成，可在-setting-CI-CD-runners-看到-runner" class="headerlink" title="设置完成，可在  setting/[CI/CD]/runners 看到 runner"></a>设置完成，可在  setting/[CI/CD]/runners 看到 runner</h6><p><a href="https://img-blog.csdn.net/20170515161632358?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYWl4aWFveWFuZzE2OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" data-fancybox="group" data-caption="image" class="fancybox"><img alt="image" data-src="https://img-blog.csdn.net/20170515161632358?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYWl4aWFveWFuZzE2OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" class="lazyload" title="image"></a></p><ol start="8"><li>配置 ssh mac/Linux 环境</li></ol><pre class="line-numbers language-Python"><code class="language-Python"># 不建议使用 root 账户创建，可能会有各种问题# 创建账户 kshao1useradd kshao1# 修改密码passwd kshao1# 直接生成 公私钥 全程回车 免密登陆ssh-keygen -t rsa || ssh-keygen# 一般用户会在 home/用户名/.ssh 看到文件密钥文件# 如果没有以下文件则生成touch authorized_keys# 该文件权限必须是 600 路径随意chmod 600 /root/.ssh/authorized_keys# 是>>而不是>，双尖括号>>表示像向文件中追加：cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>细节 <a href="https://blog.csdn.net/nahancy/article/details/79059135" target="_blank" rel="noopener">https://blog.csdn.net/nahancy/article/details/79059135</a></p></blockquote><h6 id="使用-shell-ssh-密码链接"><a href="#使用-shell-ssh-密码链接" class="headerlink" title="使用 shell ssh 密码链接"></a>使用 shell ssh 密码链接</h6><pre><code>#!/usr/bin/expect -fset TARGET 119.3.79.171set USER xxxset PASSWD xxxset PORT xxxset timeout 10spawn ssh $USER@$TARGET -p $PORTexpect {    &quot;*yes/no&quot; {send &quot;yes\r&quot;; exp_continue}    &quot;*password:&quot; {send &quot;$PASSWD\r&quot;}}interact</code></pre><ol start="9"><li>配值 .gitlab-ci.yml 文件<h6 id="Lftp-连接虚拟主机"><a href="#Lftp-连接虚拟主机" class="headerlink" title="Lftp 连接虚拟主机"></a>Lftp 连接虚拟主机</h6><pre class="line-numbers language-yml"><code class="language-yml">image: mwienk/docker-lftp:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>stages:</p><ul><li>deploy</li></ul><p>deploy:<br>  stage: deploy</p><p>  script:<br>    # 指定目录覆盖上传 (强制更新)<br>      - ls -la<br>      - lftp -c “set ftp:ssl-allow no; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST -p $port;mirror -RLv ./public /gmlh97ux/wwwroot –ignore-time –transfer-all –parallel=50 –exclude-glob .git* –exclude .git/“<br>  tags:<br>    # runner 容器标签<br>    - docker</p><p>  only:<br>    # 仅 master 分支<br>    - master</p><pre><code>###### ssh 连接服务器 需要准备好 密钥文件 scp 同理###### shell文件 可在 yml 中打开 script ./xxx```bash#!/bin/sh# -tt 取消提示# ./id_rsa1 文件地址  ssh -tt -i ./id_rsa1 kshao1@119.3.79.170 -p 22  &lt;&lt; remotessh  echo down  cd /home/kshao1/.ssh  ls  exitremotessh</code></pre>]]></content>
      
      
      <categories>
          
          <category> 其他教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo + Next + Algolia 搜索 搭建博客</title>
      <link href="/2019/07/01/blog/"/>
      <url>/2019/07/01/blog/</url>
      
        <content type="html"><![CDATA[<hr><p>title: blog-theme-fluid<br>date: 2020-03-09 20:33:18<br>categories:<br>    - 其他教程<br>tags:<br>    - blog</p><hr><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><h5 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h5><pre><code>$ npm install hexo-cli -g #282a2e</code></pre><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><pre class="line-numbers language-Python"><code class="language-Python">$ hexo init [folder]# folder  项目名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="启动预览"><a href="#启动预览" class="headerlink" title="启动预览"></a>启动预览</h5><pre class="line-numbers language-Python"><code class="language-Python">$ hexo server 预览# 如你是 webstrom 可在 package 内的 scripts 中添加"start": "hexo server"# 方便以后启动预览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h5><pre class="line-numbers language-Python"><code class="language-Python">$ hexo new [layout] <title><span aria-hidden="true" class="line-numbers-rows"><span></span></span></title></code></pre><h4 id="安装-Next-主题"><a href="#安装-Next-主题" class="headerlink" title="安装 Next 主题"></a>安装 Next 主题</h4><blockquote><p>官网 <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p></blockquote><pre class="line-numbers language-Python"><code class="language-Python"># 官网提供的是 旧版 链接，注意本文的发布日期再去官网对照$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="安装完成之后去站点配置文件，根目录-config-选用-Next"><a href="#安装完成之后去站点配置文件，根目录-config-选用-Next" class="headerlink" title="安装完成之后去站点配置文件，根目录/_config 选用 Next"></a>安装完成之后去站点配置文件，根目录/_config 选用 Next</h6><pre><code>theme: next</code></pre><h5 id="配置菜单的-分类、标签"><a href="#配置菜单的-分类、标签" class="headerlink" title="配置菜单的 分类、标签"></a>配置菜单的 分类、标签</h5><pre class="line-numbers language-Python"><code class="language-Python">$ cd your-hexo-site$ hexo new page tags<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="修改菜单-Next-主题配置文件"><a href="#修改菜单-Next-主题配置文件" class="headerlink" title="修改菜单(Next 主题配置文件)"></a>修改菜单(Next 主题配置文件)</h6><pre><code>menu:  home: /  archives: /archives  tags: /tags</code></pre><h6 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h6><pre><code># ---# 分类categories:  - 其他教程# 标签tags:  - blog# ---</code></pre><h4 id="安装-Algolia-搜索"><a href="#安装-Algolia-搜索" class="headerlink" title="安装 Algolia 搜索"></a>安装 Algolia 搜索</h4><h6 id="此操作流程只在-Next-主题下测试"><a href="#此操作流程只在-Next-主题下测试" class="headerlink" title="此操作流程只在 Next 主题下测试"></a>此操作流程只在 Next 主题下测试</h6><h1 align="center">Algolia 搜索</h1><p>NexT 内部提供 Algolia 的搜索功能，要使用此功能请确保所使用的 NexT 版本在 <code>v5.1.0</code> 之后。需要注意的是，仅仅将 <code>next/_config.yml</code> 中 <code>algolia_search</code> 的 <code>enable</code> 打开<strong>并不能让你使用 Algolia 搜索</strong>，你还需要<strong>使用对应的 Hexo-Algolia 插件</strong> 才能真正在博客页面中使用 Algolia 搜索。按照下面介绍的步骤操作即可完成 Algolia 搜索的安装。</p><ol><li><p>前往 <a href="https://www.algolia.com/" target="_blank" rel="noopener">Algolia 注册页面</a>，注册一个新账户。 可以使用 GitHub 或者 Google 账户直接登录，注册后的 14 天内拥有所有功能（包括收费类别的）。之后若未续费会自动降级为免费账户，免费账户 总共有 10,000 条记录，每月有 100,000 的可以操作数。注册完成后，创建一个新的 Index，这个 Index 将在后面使用。</p><p> <a href="http://theme-next.iissnan.com/uploads/algolia/algolia-step-2.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://theme-next.iissnan.com/uploads/algolia/algolia-step-2.png" class="lazyload" title></a></p></li><li><p>Index 创建完成后，此时这个 Index 里未包含任何数据。接下来需要安装 <a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">Hexo Algolia</a> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Algolia。前往站点根目录，执行命令安装：</p><pre><code> $ cd hexo $ npm install --save hexo-algolia</code></pre></li><li><p>在 <code>API Keys</code> 页面找到需要使用的一些配置的值，包括 <code>ApplicationID</code> 和 <code>Search-Only API Key</code>。注意，<code>Admin API Key</code> 需要保密保存，不要外泄。</p><p> <a href="https://user-images.githubusercontent.com/8521181/35479066-64e35aec-0428-11e8-91f9-1ec3afa45c5c.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://user-images.githubusercontent.com/8521181/35479066-64e35aec-0428-11e8-91f9-1ec3afa45c5c.png" class="lazyload" title></a></p></li><li><p>在 <code>API Keys</code> 页面，点击 <code>ALL API KEYS</code> 找到新建 INDEX 对应的 key，<strong>编辑权限</strong>，在弹出框中找到 ACL ，<strong>勾选 Add records、 Delete records、List indices、Delete index 权限</strong>，点击 <code>update</code> 更新。</p><p> <a href="https://user-images.githubusercontent.com/8521181/35479064-611aa0b4-0428-11e8-85a1-cfb449b486ec.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://user-images.githubusercontent.com/8521181/35479064-611aa0b4-0428-11e8-85a1-cfb449b486ec.png" class="lazyload" title></a><br> <a href="https://user-images.githubusercontent.com/8521181/35479084-d4f7ac02-0428-11e8-95a6-c4e3b1bef47b.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://user-images.githubusercontent.com/8521181/35479084-d4f7ac02-0428-11e8-95a6-c4e3b1bef47b.png" class="lazyload" title></a></p></li><li><p>编辑 <code>站点配置文件</code>，新增以下配置，除了 <code>chunkSize</code> 字段，替换成在 Algolia 获取到的值：</p><pre class="line-numbers language-yml"><code class="language-yml"> algolia:   applicationID: 'applicationID'   apiKey: 'apiKey'   indexName: 'indexName'   chunkSize: 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>当配置完成，在站点根目录下执行一下命令来更新上传 Index。请注意观察命令的输出。</p><pre><code> $ export HEXO_ALGOLIA_INDEXING_KEY=Search-Only API key # 使用 Git Bash # set HEXO_ALGOLIA_INDEXING_KEY=Search-Only API key # 使用 Windows CMD 命令行 $ hexo clean $ hexo algolia</code></pre><p> <a href="http://theme-next.iissnan.com/uploads/algolia/algolia-step-4.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://theme-next.iissnan.com/uploads/algolia/algolia-step-4.png" class="lazyload" title></a></p></li><li><p>切换到 NexT 目录，并安装 algolia-instant-search 到 <code>source/lib</code> 目录。</p><pre><code> $ cd themes/next $ git clone https://github.com/theme-next/theme-next-algolia-instant-search source/lib/algolia-instant-search</code></pre><p> 如果你想直接使用 CDN 设置 Algolia Search，则需要在<code>主题配置文件</code>中添加 vendors 字段：</p><pre class="line-numbers language-yml"><code class="language-yml"> vendors:   ...   # Internal version: 1   # https://www.algolia.com   algolia_instant_js: https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js   algolia_instant_css: https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css   ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更改<code>主题配置文件</code>，找到 Algolia Search 配置部分，将 <code>enable</code> 改为 <code>true</code>。同时你需要<strong>关闭</strong>其他搜索插件，如 Local Search 等。你也可以根据需要调整 <code>labels</code> 中的文本：</p><pre class="line-numbers language-yml"><code class="language-yml"> # Algolia Search algolia_search:   enable: true   hits:     per_page: 10   labels:     input_placeholder: Search for Posts     hits_empty: "We didn't find any results for the search: ${query}"     hits_stats: "${hits} results found in ${time} ms"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 align="center">已知的问题</h2><ol><li>考虑到 Algolia 免费账户的限制，目前 <a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">Hexo-Algolia</a> 插件最新版本去掉了正文索引功能。</li><li><a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch" target="_blank" rel="noopener">Hexo-Algoliasearch</a> 插件提供了正文索引功能，不过需要替换 NEXT 主题中的关键字。对于免费账户，<code>Record Too Big</code> 的问题同样存在。<ul><li>替换 <code>source/js/algolia-search.js</code> 中所有的 <code>applicationID</code> 为 <code>appId</code></li><li>替换 <code>layout/_partials/head/head.swig</code> 中所有的 <code>applicationID</code> 为 <code>appId</code></li></ul></li></ol><blockquote><p>此文档在 /themes/nest/docs/ALGOLIA-SEARCH</p></blockquote><h4 id="看完以上文档，默认你以安装完-Algolia，接下来使用-Hexo-Algoliasearch"><a href="#看完以上文档，默认你以安装完-Algolia，接下来使用-Hexo-Algoliasearch" class="headerlink" title="看完以上文档，默认你以安装完 Algolia，接下来使用 Hexo-Algoliasearch"></a>看完以上文档，默认你以安装完 Algolia，接下来使用 Hexo-Algoliasearch</h4><ul><li>首先安装 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch" target="_blank" rel="noopener">Hexo-Algoliasearch</a></li></ul><h5 id="在站点配置文件"><a href="#在站点配置文件" class="headerlink" title="在站点配置文件"></a>在站点配置文件</h5><pre class="line-numbers language-yml"><code class="language-yml">algolia:  # appid 为 applicationID 如未替换需替换  appId: "Z7A3XW4R2I"  # search only key  apiKey: "12db1ad54372045549ef465881c17e743"  adminApiKey: "40321c7c207e7f73b63a19aa24c4761b"  chunkSize: 5000  indexName: "my-hexo-blog"  fields:    - content:strip:truncate,0,500    - excerpt:strip    - gallery    - permalink    - photos    - slug    - tags    - title<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置完成后运行</p><pre class="line-numbers language-yml"><code class="language-yml">$ hexo clean$ hexo algolia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>配置好以上，Next的<code>algolia</code>搜索是没有内容搜索的，所以配置了上面的插件。<br>默认 <code>algolia</code> 搜索显示只有标题，关键词未高亮，所以开始了老本行工作。</p><ol><li>打开配置文件 <code>/themes/next/source/js</code> 替换以下内容</li></ol><pre class="line-numbers language-javaScript"><code class="language-javaScript">instantsearch.widgets.hits({      container  : '#algolia-hits',      hitsPerPage: algoliaSettings.hits.per_page || 10,      templates  : {        item: function(data) {          var link = data.permalink ? data.permalink : CONFIG.root + data.path;          return (            `              <ul>                <li>                  <a href="${link}" class="algolia-hit-item-link">${data._highlightResult.title.value}</a>                  <a href="${link}" class="algolia-hit-item-match">                    <p>${data._highlightResult.contentStripTruncate.value}</p>                  </a>                </li>              </ul>            `          );        },        empty: function(data) {          return (            '<div id="algolia-hits-empty">'          + algoliaSettings.labels.hits_empty.replace(/\$\{query}/, data.query)          + '</div>'          );        }      },      cssClasses: {        item: 'algolia-hit-item'      }    })<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>修改 css <code>/themes/next/source/css/main.styl</code></li></ol><pre class="line-numbers language-styl"><code class="language-styl">.algolia-hit-item-match  text-decoration none  border none  color rgba(31, 31, 31, 0.37)  &:hover    color rgba(34, 34, 34, 0.53)  em    padding 3px    border-bottom: 1px dashed #f00;    font-weight: bold;    color: #f00;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 其他教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片懒加载的两种方法-节流 IntersectionObserver</title>
      <link href="/2019/03/17/e5-9b-be-e7-89-87-e6-87-92-e5-8a-a0-e8-bd-bd-e7-9a-84-e4-b8-a4-e7-a7-8d-e6-96-b9-e6-b3-95-e8-8a-82-e6-b5-81-intersectionobserver/"/>
      <url>/2019/03/17/e5-9b-be-e7-89-87-e6-87-92-e5-8a-a0-e8-bd-bd-e7-9a-84-e4-b8-a4-e7-a7-8d-e6-96-b9-e6-b3-95-e8-8a-82-e6-b5-81-intersectionobserver/</url>
      
        <content type="html"><![CDATA[<p><strong>第一种：</strong></p><blockquote><p>以下代码皆在 React 中测试使用</p></blockquote><p>使用 <strong><em>window</em></strong> 上的 <strong><em>onscroll</em></strong> 事件，配合封装好的 throttle 节流函数实现图片的懒加载。</p><p>render 函数内：</p><pre><code>render() {    const data = [      {        url: &#39;https://dwz.cn/Jwg1UQEj&#39;,        text: &#39;图片1-1&#39;,      },      {        url: &#39;https://dwz.cn/w8t4A0WD&#39;,        text: &#39;图片1-2&#39;,      },      {        url: &#39;https://dwz.cn/l1nYpL4U&#39;,        text: &#39;图片1-3&#39;,      },      {        url: &#39;https://dwz.cn/2XrYhRBX&#39;,        text: &#39;图片1-4&#39;,      },      {        url: &#39;https://dwz.cn/00pSTOtm&#39;,        text: &#39;图片1-5&#39;,      },      {        url: &#39;https://dwz.cn/Hg1aIh3e&#39;,        text: &#39;图片1-6&#39;,      },    ];    return(      &lt;ul className={styles.list}&gt;        {Object.keys(data).length ? data.map(item =&gt; {          return (            &lt;li key={item.url} &gt;              &lt;h2&gt;{item.text}&lt;/h2&gt;              &lt;img className={styles.lazyImg} src=&#39;https://dwz.cn/qLQmSywT&#39; _src={item.url} alt={item.text}/&gt;            &lt;/li&gt;          )        }) : &#39;loading&#39;}      &lt;/ul&gt;    )  }</code></pre><p>componentDidmount 函数内</p><pre><code>// 获取所有的需要懒加载的图片元素const imgs = document.querySelectorAll(&#39;.&#39;+styles.lazyImg);// 首次执行 手动触发滚动事件this.lazyLoad(imgs);// 节流函数const lazyLoad = this.throttle(e =&gt; this.lazyLoad(imgs), 400, true);window.onscroll - lazyLoad</code></pre><p>lazyLoad 方法</p><pre><code>lazyLoad = (imgs) =&gt; {    imgs.forEach(item =&gt; {      console.log(&#39;lazyLoad&#39;);      const top = item.getBoundingClientRect().top;      if (top &lt; window.innerHeight &amp;&amp; item.src !== item.getAttribute(&#39;_src&#39;)) {        item.src = item.getAttribute(&#39;_src&#39;);      }    })  };</code></pre><p>// 节流函数的封装<br>throttle = (fn, wait, immediate) =&gt; {<br>  let timer = null;<br>  let callNow = immediate;<br>  return function() {<br>    const args = arguments,<br>          that = this;<br>    if (callNow) {<br>      fn.apply(that, args);<br>      callNow = false<br>  }<br>    if (!timer) {<br>      setTimeout(() =&gt; {<br>        fn.apply(that, args);<br>        timer = null;<br>      }, wait)<br>    }<br>  }<br>};</p><p><strong>第二种</strong></p><p>使用 IntersectionObserver 接口，具体使用方法请去 MDN 查看</p><pre><code>const io = new IntersectionObserver(callback); // 获取所有的需要懒加载的图片元素const imgs = document.querySelectorAll(&#39;.&#39;+styles.lazyImg);function callback(entries) {      entries.forEach((item) =&gt; {        if(item.isIntersecting){          item.target.src = item.target.getAttribute(&#39;_src&#39;);          io.unobserve(item.target)        }      })}imgs.forEach((item)=&gt;{   io.observe(item)})</code></pre><p>componentDidmount 函数内</p><blockquote><p>本文引荐 <a href="https://www.jianshu.com/p/84a86e41eb2b" target="_blank" rel="noopener">https://www.jianshu.com/p/84a86e41eb2b</a></p><p>IntersectionObserver 亦可以实现 导航栏吸顶效果</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法面试题-查找指定的字符串</title>
      <link href="/2019/03/09/e7-ae-97-e6-b3-95-e9-9d-a2-e8-af-95-e9-a2-98-e6-9f-a5-e6-89-be-e6-8c-87-e5-ae-9a-e7-9a-84-e5-ad-97-e7-ac-a6-e4-b8-b2/"/>
      <url>/2019/03/09/e7-ae-97-e6-b3-95-e9-9d-a2-e8-af-95-e9-a2-98-e6-9f-a5-e6-89-be-e6-8c-87-e5-ae-9a-e7-9a-84-e5-ad-97-e7-ac-a6-e4-b8-b2/</url>
      
        <content type="html"><![CDATA[<p>实现一个算法，寻找字符串中出现次数最少的、并且首次出现位置最前的字符如<br>“<em>cbaacfdeaebb</em>“，符合要求的是”f”，因为他只出现了一次（次数最少）。<br>并且比其他只出现一次的字符（如”d”）首次出现的位置最靠前。</p><pre><code>const findMinStr = (str) =&gt; {    const hash = {};    for (let i = 0; i &lt; str.length; i += 1) {      hash[str[i]] = hash[str[i]] || { index: i, count: 0 };      hash[str[i]].count += 1;    }    return Object.keys(hash).map(item =&gt; {      return Object.assign({ char: item }, hash[item]);    })      .sort((a, b) =&gt; a.count - b.count)      .filter((item, index, arr) =&gt; item.count === arr[0].count)      .sort((a, b) =&gt; a.index - b.index)[0].char};const str = &#39;cbaacfdeaebb&#39;;findMinStr (str)  // &#39;f&#39;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在react中使用antd+less+css modules</title>
      <link href="/2019/03/09/e5-9c-a8react-e4-b8-ad-e4-bd-bf-e7-94-a8antdlesscss-modules/"/>
      <url>/2019/03/09/e5-9c-a8react-e4-b8-ad-e4-bd-bf-e7-94-a8antdlesscss-modules/</url>
      
        <content type="html"><![CDATA[<h4 id="配置less"><a href="#配置less" class="headerlink" title="配置less"></a>配置less</h4><p>首先安装less和less-loader</p><pre><code>cnpm i --save-dev less less-loader</code></pre><p>然后在webpack.config中配置</p><pre><code>{  test: /\.less$/,  use: [      require.resolve(&#39;style-loader&#39;),      {          loader: require.resolve(&#39;css-loader&#39;)      },      {          loader: require.resolve(&#39;less-loader&#39;), // compiles Less to CSS      },  ],},</code></pre><h4 id="开启css-modules功能"><a href="#开启css-modules功能" class="headerlink" title="开启css modules功能"></a>开启css modules功能</h4><p>但是如果我想开启css modules功能，使less和css可以模块化，就需要再配置，但是不能全局配置，这样的话会导致antd没有使用css modules模块的框架的样式无法作用。</p><h6 id="开启less的css-modules功能"><a href="#开启less的css-modules功能" class="headerlink" title="开启less的css modules功能"></a>开启less的css modules功能</h6><pre><code> 这里我开启自己编写的less文件的css modules功能 除了node_modules库中的less，//也就是可以过滤掉antd库中的样式{  test: /\.less$/,  exclude: [/node_modules/],  use: [      require.resolve(&#39;style-loader&#39;),      {          loader: require.resolve(&#39;css-loader&#39;),          options: {              modules: true,              localIdentName:&quot;[name]__[local]___[hash:base64:5]&quot;          },      },      {          loader: require.resolve(&#39;less-loader&#39;), // compiles Less to CSS      },  ],},</code></pre><h6 id="开启css的css-modules功能"><a href="#开启css的css-modules功能" class="headerlink" title="开启css的css modules功能"></a>开启css的css modules功能</h6><p>如果想开启css的css modules功能，就比较麻烦点，除了针对css开启css modules，还需要需要针对antd的css 单独写一条loader的规则,不开启 css modules。</p><pre><code> 这里设置css开启modules支持,node_modules和antd里面的css不开启{  test: /\.css$/,  exclude: /node_modules|antd\.css/,  use: [      require.resolve(&#39;style-loader&#39;),      {          loader: require.resolve(&#39;css-loader&#39;),          options: {              importLoaders: 1,              // 改动              modules: true,   // 新增对css modules的支持              localIndetName: &#39;[name]__[local]__[hash:base64:5]&#39;, //          },      },      {          loader: require.resolve(&#39;postcss-loader&#39;),          options: {              ident: &#39;postcss&#39;,              plugins: () =&gt; [                  require(&#39;postcss-flexbugs-fixes&#39;),                  autoprefixer({                      browsers: [                          &#39;&gt;1%&#39;,                          &#39;last 4 versions&#39;,                          &#39;Firefox ESR&#39;,                          &#39;not ie &lt; 9&#39;, // React doesn&#39;t support IE8 anyway                      ],                      flexbox: &#39;no-2009&#39;,                  }),              ],          },      },  ],}然后针对node_modules和antd里面的css写编译配置{  test: /\.css$/,  include: /node_modules|antd\.css/,  use: [      require.resolve(&#39;style-loader&#39;),      {          loader: require.resolve(&#39;css-loader&#39;),          options: {              importLoaders: 1,              // 改动              // modules: true,   // 新增对css modules的支持              // localIndetName: &#39;[name]__[local]__[hash:base64:5]&#39;, //          },      },      {          loader: require.resolve(&#39;postcss-loader&#39;),          options: {              ident: &#39;postcss&#39;,              plugins: () =&gt; [                  require(&#39;postcss-flexbugs-fixes&#39;),                  autoprefixer({                      browsers: [                          &#39;&gt;1%&#39;,                          &#39;last 4 versions&#39;,                          &#39;Firefox ESR&#39;,                          &#39;not ie &lt; 9&#39;, // React doesn&#39;t support IE8 anyway                      ],                      flexbox: &#39;no-2009&#39;,                  }),              ],          },      },  ],},</code></pre><blockquote><p>至此就配置好了开发环境下的所有代码<br>同样的代码需要在webpack.config.prod，生产环境的webpack里面再配置一次，打包后的文件各种CSS和less文件才会生效。</p></blockquote><p><a href="https://www.jianshu.com/p/51ff1c8be301" target="_blank" rel="noopener">转自 追风的云月</a></p>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>编译修饰符 Bable配置</title>
      <link href="/2019/03/08/e7-bc-96-e8-af-91-e7-ae-ad-e5-a4-b4-e5-87-bd-e6-95-b0-bable-e9-85-8d-e7-bd-ae/"/>
      <url>/2019/03/08/e7-bc-96-e8-af-91-e7-ae-ad-e5-a4-b4-e5-87-bd-e6-95-b0-bable-e9-85-8d-e7-bd-ae/</url>
      
        <content type="html"><![CDATA[<p>xiu npm install –save-dev babel-plugin-transform-decorators-legacy</p><pre><code>在根目录.babelrc文件里&quot;plugins&quot;: [&quot;transform-decorators-legacy&quot;]如果没有babel.lrc文件请搜索对应框架的文件配置</code></pre>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> babel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云 144 元 一年30Mb香港服务器 3.4~3.15</title>
      <link href="/2019/03/08/e9-98-bf-e9-87-8c-e4-ba-91-144-e5-85-83-e4-b8-80-e5-b9-b430mb-e9-a6-99-e6-b8-af-e6-9c-8d-e5-8a-a1-e5-99-a8-3-43-15/"/>
      <url>/2019/03/08/e9-98-bf-e9-87-8c-e4-ba-91-144-e5-85-83-e4-b8-80-e5-b9-b430mb-e9-a6-99-e6-b8-af-e6-9c-8d-e5-8a-a1-e5-99-a8-3-43-15/</url>
      
        <content type="html"><![CDATA[<p>打开：<a href="http://t.cn/EIJKfAY" target="_blank" rel="noopener">http://t.cn/EIJKfAY</a> 点击立即报名</p><p>打开：<a href="http://t.cn/EIJ9KUH" target="_blank" rel="noopener">http://t.cn/EIJ9KUH</a> 按上图选择香港CentOs系统1年30Mb服务器只需144元</p><p>活动时间：2019.3.4~3.15</p><p><a href="http://blog.ksh7.com/wp-content/uploads/2019/03/rjIMsVh_jpg-1-1024x387.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://blog.ksh7.com/wp-content/uploads/2019/03/rjIMsVh_jpg-1-1024x387.jpg" class="lazyload" title></a></p><p><a href="http://blog.ksh7.com/wp-content/uploads/2019/03/rjIMvXu_jpg-1-1024x680.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://blog.ksh7.com/wp-content/uploads/2019/03/rjIMvXu_jpg-1-1024x680.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> 福利活动 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>courseTable -- 可移动的React课程表组件</title>
      <link href="/2019/03/08/coursetable-e5-8f-af-e7-a7-bb-e5-8a-a8-e7-9a-84react-e8-af-be-e7-a8-8b-e8-a1-a8-e7-bb-84-e4-bb-b6/"/>
      <url>/2019/03/08/coursetable-e5-8f-af-e7-a7-bb-e5-8a-a8-e7-9a-84react-e8-af-be-e7-a8-8b-e8-a1-a8-e7-bb-84-e4-bb-b6/</url>
      
        <content type="html"><![CDATA[<h1 id="Course-Table"><a href="#Course-Table" class="headerlink" title="Course Table"></a>Course Table</h1><h2 id="✨-Features"><a href="#✨-Features" class="headerlink" title="✨ Features"></a>✨ Features</h2><ul><li>可移动的 课程表</li><li>代码简单，欢迎优化</li><li>预览链接 <a href="https://Kshao123.github.io" target="_blank" rel="noopener">https://Kshao123.github.io</a></li></ul><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="IE / Edge" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png" class="lazyload"></a><br>IE / Edge</p><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="Firefox" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png" class="lazyload"></a><br>Firefox</p><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="Chrome" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png" class="lazyload"></a><br>Chrome</p><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="Safari" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png" class="lazyload"></a><br>Safari</p><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="Opera" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/opera/opera_48x48.png" class="lazyload"></a><br>Opera</p><p><a href="http://godban.github.io/browsers-support-badges/" target="_blank" rel="noopener"><img alt="Electron" data-src="https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png" class="lazyload"></a><br>Electron</p><p>IE9, IE10, IE11, Edge</p><p>last 2 versions</p><p>last 2 versions</p><p>last 2 versions</p><p>last 2 versions</p><p>last 2 versions</p><h2 id="📦-Install"><a href="#📦-Install" class="headerlink" title="📦 Install"></a>📦 Install</h2><pre><code>npm i course-tablenpm i course-table -S</code></pre><h2 id="🔨-Usage"><a href="#🔨-Usage" class="headerlink" title="🔨 Usage"></a>🔨 Usage</h2><pre><code>import CourseTable from &#39;course-table&#39;;const courseTables = {      1: [        {          startTime:1551920827000,          endTime:1551924427000,          stuNameList: [&#39;123&#39;],          teaName: &#39;312&#39;        }      ]    };const handleConfirm = (data,handleOK) =&gt; {    handleOK()};ReactDOM.render(    &lt;CourseTable         courseTables={courseTables}        handleConfirm={handleConfirm}    /&gt;,     mountNode);</code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReactComponent </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
